{"version":3,"sources":["Home.tsx","About.tsx","lib/CRUDService.ts","lib/SchemaTool.ts","LinkButton.tsx","MyModal.tsx","lib/authProvider.js","CRUDTable.tsx","EditDTO.tsx","NavDatabase.tsx","LoginButton.tsx","NavMain.tsx","UserContext.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/azure.png","assets/react.png","assets/netcore.png","LinkButton.module.css"],"names":["Home","CardDeck","Card","Img","variant","src","imgReact","Body","Title","Text","imgNetCore","imgAzure","href","target","rel","About","Container","getReducer","state","action","type","data","undefined","dataOriginal","schema","isChanged","isLoading","isError","errorText","payload","cloneDeep","console","log","isEqual","Error","useGet","initialEntity","initialId","useState","entity","setEntity","id","setId","useReducer","dispatch","useEffect","name","endpoint","process","apiMethods","getIndex","GetSingle","Axios","get","then","response","catch","e","getErrorText","getListReducer","useGetList","refresh","setRefresh","GetList","getList","removeDTO","accessToken","a","async","Delete","delete","headers","indexOf","find","o","Name","getSingleName","SingleName","error","txt","status","request","message","Put","Post","SchemaTool","this","Props","filter","Hidden","prop","Type","dto","Required","length","PropEnums","value","Max","Min","isNaN","MaxLength","MinLength","every","valuestr","isNumeric","Number","LinkButton","React","forwardRef","props","ref","className","styles","linkbutton","onClick","text","children","messageBox","title","OKButtonTitle","Promise","resolve","reject","show","removeModal","div","document","getElementById","body","getElementsByTagName","removeChild","createElement","setAttribute","appendChild","ReactDOM","render","onOK","onCancel","MyModal","setShow","forceHide","setForceHide","Modal","Header","Footer","Button","options","loginType","LoginType","Popup","tokenRefreshUri","window","location","origin","authProvider","MsalAuthProvider","auth","authority","clientId","redirectUri","validateAuthority","cache","cacheLocation","storeAuthStateInCookie","scopes","CRUDRow","createRef","useLocation","useParams","renderTooltip","Tooltip","DeleteAsync","getAccessToken","token","Id","onRefresh","cogoToast","info","hideAfter","hide","dataCols","Object","keys","map","key","index","val","Array","isArray","slice","style","width","whiteSpace","OverlayTrigger","placement","delay","overlay","to","pathname","icon","authenticationState","AuthenticationState","Authenticated","login","CRUDHeader","schemaTool","label","CRUDTable","fluid","Row","Col","Alert","Heading","Spinner","animation","size","Table","obj","EditDTO","validated","setValidated","params","parseInt","history","useHistory","updateData","handleChange","x","newValue","currentTarget","checked","strToValue","handleUpdateOrAdd","form","preventDefault","stopPropagation","checkValidity","handleAdd","handleUpdate","put","putDTO","finally","goBack","post","postDTO","editFields","Form","Group","retval","Label","column","sm","Control","as","required","readOnly","Readonly","onChange","disabled","enumDesc","Feedback","invalidFeedback","Check","labelForCheckBox","InputType","pattern","Pattern","maxLength","minLength","max","min","renderControl","noValidate","onSubmit","block","renderForm","NavDatabase","defaultValue","localStorage","getItem","JSON","parse","setState","setItem","stringify","usePersistedState","setKey","linkItems","exact","Nav","Link","eventKey","activeKey","onSelect","selectedKey","path","NoMatch","LoginButton","provider","logout","isInProgress","InProgress","isAuthenticated","isUnauthenticated","Unauthenticated","NavMain","Navbar","bg","sticky","inline","UserContext","createContext","App","Provider","Boolean","hostname","match","library","add","fab","faTrash","faPlus","faEdit","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.38369fdf.chunk.js","sourcesContent":["import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport imgAzure from './assets/azure.png'\r\nimport imgReact from './assets/react.png'\r\nimport imgNetCore from './assets/netcore.png'\r\nconst Home:React.FC = () => {\r\nreturn (\r\n<>\r\n<br/>\r\n<CardDeck>\r\n  <Card>\r\n  <Card.Img  variant=\"top\" src={imgReact} />\r\n    <Card.Body>\r\n      <Card.Title>Frontend</Card.Title>\r\n      <Card.Text>\r\n      <p>\r\n        The frontend is developed in Visual Studio Code using React functional components, hooks and TypeScript. For the UI, React-Bootstrap, React-Fontawesome and cogo-toast libraries are used.\r\n        Axios handles the webapi calls and React-router the routing.\r\n      </p>\r\n      <p>\r\n        react-aad-msal / Msal.js libraries are used to implement OAuth 2.0 / OpenID Connect standards to sign in to Azure B2C, \r\n        from where jwt id and access tokens are obtained and used to gain access to the backend webapi.\r\n      </p>\r\n      <p>\r\n        Grid columns and form fields are dynamically created based on schema received from the backend. \r\n        There is only one grid view and Add/Edit view for all three entity types. The views are customized by using the schema.\r\n      </p>\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <Card>\r\n  <Card.Img  variant=\"top\" src={imgNetCore} />\r\n    <Card.Body>\r\n      <Card.Title>Backend</Card.Title>\r\n      <Card.Text>\r\n        <p>\r\n        The backend is developed in Visual Studio 2019 using .Net Core 3 WebApi.\r\n        EntityFrameWork Core is used for object/relational mapping. \r\n        EF Core code first approach generates the database creation scripts for SQL Server database.\r\n        AutoMapper handles mappings between dto and datamodel classes. \r\n      </p>\r\n      <p>\r\n        The backend uses jwt token authentication to protect the delete endpoints. Other endpoints (get, put, post) are public for testing purposes.\r\n      </p>\r\n      <p>\r\n        Backend uses reflection and attributes to generate a schema describing the object properties.\r\n        The schema is passed to the frontend, which uses it to generate the UI.\r\n      </p>\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <Card>\r\n  <Card.Img  variant=\"top\" src={imgAzure} />\r\n    <Card.Body>\r\n      <Card.Title>Hosting</Card.Title>\r\n      <Card.Text>\r\n      <p>\r\n        Both frontend and backend are hosted in the same Microsoft Azure AppService. \r\n        The database is an Azure Sql database. IIS has rewrite rules for SPA. \r\n      </p>\r\n      <p>\r\n        Both frontend and backend are registered applications in Azure AD B2C.\r\n        The backend exposes an api and the frontend is granted access for the api.\r\n        Google is set up as an external identity provider or the user can sign up with a verified e-mail account.\r\n      </p>\r\n      <p>\r\n        Microsoft Devops is used for deploying the application to Azure.\r\n        GIT is used for version control. I have put the sources to GitHub. \r\n        Check out the <a href=\"https://github.com/anttijs/react-to-netcore-webapi-with-msal-js\" target=\"_blank\" rel=\"noopener noreferrer\">frontend</a> and \r\n        the <a href=\"https://github.com/anttijs/schemagenerator-for-react\" target=\"_blank\" rel=\"noopener noreferrer\">backend.</a>\r\n      </p>\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n</CardDeck>\r\n</> \r\n)\r\n}\r\nexport default Home\r\n","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nexport const About: React.FC = () => {\r\n    return (\r\n    <Container>\r\n        <p></p>\r\n        <h2>About me</h2>\r\n        <p>\r\n        I'm a Full Stack developer working as a private IT-consultant. \r\n        I have worked for 25 years in software development and have experience with\r\n        Javascript, Jquery, .Net Core, EF Core, mySQL and SQL Server. I mainly work with C# and C++. \r\n        </p>\r\n        <p>\r\n        I have studied Information Systems Science and graduated as a Master of Science in Economics from the University of Jyväskylä. \r\n        You can contact me at <a href=\"mailto:antti.stoor@hotmail.com\">antti.stoor@hotmail.com</a>\r\n        </p>\r\n    </Container>\r\n    )\r\n\r\n}","import Axios, { AxiosResponse } from 'axios'\r\nimport {Schema} from './SchemaTool'\r\nimport React, {useState, useEffect, useReducer} from 'react'\r\nimport {isEqual, cloneDeep} from 'lodash'\r\n\r\ninterface ResponseData {\r\n  data: any;\r\n  schema: Schema\r\n}\r\n\r\nconst RESOURCE_NAME = process.env.REACT_APP_API_ENDPOINT\r\n\r\n\r\nconst get = (name: string, id: number) => {\r\n  let endpoint = `${RESOURCE_NAME}/${apiMethods[getIndex(name)].GetSingle}/${id}`\r\n  console.log('Axios.get, endpoint:',endpoint, 'name:', name)\r\n  return Axios.get(endpoint);\r\n}\r\ntype StateforGet = {\r\n  data: any,\r\n  dataOriginal: any,\r\n  schema: Schema | undefined,\r\n  isChanged: boolean,\r\n  isLoading: boolean,\r\n  isError: boolean,\r\n  errorText: string\r\n}\r\ntype ActionforGet = {\r\n  type: 'init' | 'success' | 'error' | 'update',\r\n  payload?: {data: any | undefined, schema: Schema | undefined, errorText: string}\r\n}\r\n\r\nconst getReducer = (state: StateforGet,  action: ActionforGet) => {\r\n  switch (action.type) {\r\n    case \"init\":\r\n      return {\r\n        ...state,\r\n        data: undefined,\r\n        dataOriginal: undefined,\r\n        schema: undefined,\r\n        isChanged: false,\r\n        isLoading: true,\r\n        isError: false,\r\n        errorText: \"\"\r\n      };\r\n    case \"success\":\r\n      return {\r\n        ...state,\r\n        data: action.payload!.data,\r\n        dataOriginal: cloneDeep(action.payload!.data),\r\n        schema: action.payload!.schema,\r\n        isChanged: false,\r\n        isLoading: false,\r\n        isError: false,\r\n        errorText: \"\"\r\n        \r\n      };\r\n    case \"error\":\r\n      return {\r\n        ...state,\r\n        data: undefined,\r\n        dataOriginal: undefined,\r\n        schema: undefined,\r\n        isChanged: false,\r\n        isLoading: false,\r\n        isError: true,\r\n        errorText: action.payload!.errorText\r\n      };\r\n      case \"update\":\r\n        console.log('iseqaul',isEqual(action.payload!.data,state.dataOriginal), state.dataOriginal )\r\n      return {\r\n        ...state,\r\n        data: action.payload!.data,\r\n        isChanged: !isEqual(action.payload!.data,state.dataOriginal),\r\n        isLoading: false,\r\n        isError: false,\r\n        errorText: \"\"\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\nexport const useGet = (initialEntity: string, initialId: number): [StateforGet, (data: any)=> void] => {\r\n  const [entity, setEntity] = useState<string>(initialEntity)\r\n  const [id, setId] = useState<number>(initialId)\r\n  const [state, dispatch] = useReducer(getReducer, {data: undefined, dataOriginal: undefined, schema: undefined, isChanged: false, isLoading: false, isError: false, errorText:\"\"})\r\n  \r\n  const updateData = (data: any) => {\r\n    dispatch({type: 'update', payload: {data: data, schema: undefined, errorText:\"\"}})\r\n  }\r\n\r\n  if (entity !== initialEntity || id !== initialId) {\r\n    setEntity(initialEntity)\r\n    setId(initialId)\r\n    console.log('update', entity, initialEntity)\r\n  }\r\n  else {\r\n    console.log('no update', entity, initialEntity)\r\n  }\r\n  useEffect(() => {\r\n    console.log('getting data', entity)\r\n    dispatch({type:'init'})\r\n    get(entity, id)\r\n    .then((response: any) => {\r\n      dispatch({type:'success', payload: { data: response.data.data, schema: response.data.schema, errorText: \"\"}})\r\n    })\r\n    .catch(e => {\r\n      dispatch({type:'error', payload: { data: undefined, schema: undefined, errorText: getErrorText(e)}})\r\n    })\r\n  },[entity, id])\r\n  return [state, updateData]\r\n}\r\n\r\ntype StateforGetList = {\r\n  data: any[],\r\n  schema: Schema | undefined,\r\n  isLoading: boolean,\r\n  isError: boolean,\r\n  errorText: string\r\n}\r\ntype ActionforGetList = {\r\n  type: 'init' | 'success' | 'error',\r\n  payload?: {data: any[], schema: Schema | undefined, errorText: string}\r\n}\r\n\r\nconst getListReducer = (state: StateforGetList,  action: ActionforGetList) => {\r\n  switch (action.type) {\r\n    case \"init\":\r\n      return {\r\n        ...state,\r\n        data: [],\r\n        schema: undefined,\r\n        isLoading: true,\r\n        isError: false,\r\n        errorText: \"\"\r\n      };\r\n    case \"success\":\r\n      return {\r\n        ...state,\r\n        data: action.payload!.data,\r\n        schema: action.payload!.schema,\r\n        isLoading: false,\r\n        isError: false,\r\n        errorText: \"\"\r\n        \r\n      };\r\n    case \"error\":\r\n      return {\r\n        ...state,\r\n        data: action.payload!.data,\r\n        schema: undefined,\r\n        isLoading: false,\r\n        isError: true,\r\n        errorText: action.payload!.errorText\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst getList = (name: string) => {\r\n  let endpoint: string = `${RESOURCE_NAME}/${apiMethods[getIndex(name)].GetList}`\r\n  console.log('Axios.get, endpoint:',endpoint, 'name:', name)\r\n  return Axios.get<ResponseData>(endpoint);\r\n}\r\n\r\nexport const useGetList = (initialEntity: string): \r\n[StateforGetList, boolean, React.Dispatch<React.SetStateAction<boolean>>] => {\r\n  const [entity, setEntity] = useState<string>(initialEntity)\r\n  const [refresh, setRefresh] = useState<boolean>(false)\r\n  const [state, dispatch] = useReducer(getListReducer, { data: [], schema: undefined, isError: false, isLoading: false, errorText:\"\" });\r\n\r\n  \r\n  if (entity !== initialEntity) {\r\n    setEntity(initialEntity)\r\n    console.log('update', entity, initialEntity)\r\n  }\r\n  else {\r\n    console.log('no update', entity, initialEntity)\r\n  }\r\n  useEffect(() => {\r\n    dispatch( { type: 'init' } );\r\n    getList(entity)\r\n    .then(response => {\r\n      dispatch({type: 'success', payload: {data: response.data.data, schema: response.data.schema, errorText: \"\"}})\r\n    })\r\n    .catch((e: AxiosResponse)=>{\r\n      dispatch({type: 'error', payload: {data: [], schema: undefined, errorText: getErrorText(e)}})\r\n    })\r\n  },[entity, refresh])\r\n  return [state, refresh, setRefresh]\r\n}\r\n\r\nexport const postDTO = async (name: string, dto: any) => {\r\n  let endpoint = `${RESOURCE_NAME}/${apiMethods[getIndex(name)].Post}`\r\n  console.log('Axios.post, endpoint:',endpoint)\r\n  try {\r\n    return await Axios.post(endpoint, dto)\r\n  }\r\n  catch (e) {\r\n    throw new Error(getErrorText(e))\r\n  }\r\n}\r\n\r\nexport const putDTO = async (name: string, dto: any) => {\r\n  let endpoint = `${RESOURCE_NAME}/${apiMethods[getIndex(name)].Put}/${dto.Id}`\r\n  console.log('Axios.put, endpoint:',endpoint)\r\n  try {\r\n    return await Axios.put(endpoint, dto)\r\n  }\r\n  catch (e) {\r\n    throw new Error(getErrorText(e))\r\n  }\r\n}\r\n\r\nexport const removeDTO = async (name: string, id: number, accessToken: string) => {\r\n  let endpoint = `${RESOURCE_NAME}/${apiMethods[getIndex(name)].Delete}/${id}`\r\n  console.log('Axios.delete, endpoint:',endpoint)\r\n  try {\r\n    return await Axios.delete(endpoint, { headers: {\"Authorization\" : `Bearer ${accessToken}`} });\r\n  }\r\n  catch (e) {\r\n    throw new Error(getErrorText(e))\r\n  }\r\n}\r\nconst getIndex = (name: string) => {\r\n    return (apiMethods.indexOf(apiMethods.find(o => o.Name === name)!))\r\n}\r\nexport const getSingleName = (name: string): string => {\r\n  return apiMethods[getIndex(name)].SingleName\r\n}\r\n\r\nconst getErrorText = (error: any): string => {\r\n  let txt=\"\"\r\n  if (error.response) {\r\n    // The request was made and the server responded with a status code\r\n    // that falls out of the range of 2xx\r\n    console.log(error.response.data);\r\n    console.log('getErrorText:',error.response.status);\r\n    console.log('getErrorText:',error.response.headers);\r\n    txt = `Operation failed. The server responded with error ${error.response.status}. ${error.response.data}`\r\n  } else if (error.request) {\r\n    // The request was made but no response was received\r\n    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n    // http.ClientRequest in node.js\r\n    console.log(error.request);\r\n    txt = `Operation failed. The server did not respond`\r\n  } else {\r\n    // Something happened in setting up the request that triggered an Error\r\n    console.log('Error', error.message);\r\n    txt = `Operation failed, reason ${error.message}`\r\n  }\r\n  return txt\r\n}\r\nexport const apiMethods = [\r\n  {Name: \"People\", SingleName: \"person\", GetList: \"GetPeople\", GetSingle: \"GetPerson\", Put: \"PutPerson\", Post: \"PostPerson\", Delete: \"DeletePerson\"},\r\n  {Name: \"Movies\", SingleName: \"movie\", GetList: \"GetMovies\", GetSingle: \"GetMovie\", Put: \"PutMovie\", Post: \"PostMovie\", Delete: \"DeleteMovie\"},\r\n  {Name: \"Books\", SingleName: \"book\", GetList: \"GetBooks\", GetSingle: \"GetBook\", Put: \"PutBook\", Post: \"PostBook\", Delete: \"DeleteBook\"}\r\n]\r\n","\r\ninterface EnumDesc {\r\n    value: number;\r\n    text: string;\r\n}\r\nexport interface Prop {\r\n    Hidden: string|null;\r\n    Name: string;\r\n    Title: string|null;\r\n    Type: string|null;\r\n    InputType: string;\r\n    Readonly: boolean;\r\n    Required: boolean;\r\n    Min: any|null;\r\n    Max: any|null;\r\n    MinLength: number|null;\r\n    MaxLength: number|null;\r\n    Pattern: string|null;\r\n    PropEnums: EnumDesc[];\r\n\r\n}\r\nexport interface Schema {\r\n    Display: string|null;\r\n    ClassName: string|null;\r\n    KeyName: string|null;\r\n    Props: Prop[]\r\n}\r\n\r\nexport class SchemaTool  {\r\n  schema:  Schema\r\n  constructor(schema: Schema) {\r\n    this.schema = schema\r\n  }\r\n  editFields() {\r\n    if (!this.schema)\r\n        return []\r\n    return this.schema.Props.filter( ({ Hidden }) => { return !Hidden })\r\n  }\r\n  label(prop: Prop) {\r\n    if (prop.Type === 'bool')\r\n      return ''\r\n    else if (prop.Title === null || prop.Title===\"\")\r\n      return prop.Name!\r\n    else\r\n      return prop.Title\r\n  }\r\n  labelForCheckBox(prop: Prop) {\r\n    if (prop.Type !== 'bool')\r\n      return ''\r\n    if (prop.Title === null)\r\n      return prop.Name!\r\n    return prop.Title\r\n  }\r\n  invalidFeedback(prop: Prop, dto: any): string {\r\n    if (this.state(prop, dto)===true){\r\n      return ''\r\n    }\r\n    if (prop.Required === true && (dto === null || dto === undefined || dto.length===0))\r\n      return 'The field is required';\r\n    if (prop.Required === true && prop.Type === 'enum' && prop.PropEnums.find( ({value}) => value === dto) === undefined)\r\n      return 'The field is required'\r\n    if (prop.Type === 'number') {\r\n      if ((prop.Max !== null && (dto === null || dto === undefined || dto > prop.Max)) || \r\n        (prop.Min !== null && (dto === null ||  dto === undefined || dto < prop.Min))) {\r\n        return `Enter value between ${prop.Min} and ${prop.Max}`\r\n      }\r\n      if(isNaN(dto)) {\r\n        return 'Enter a valid number'\r\n      }\r\n    }\r\n    if (prop.Type === 'text') { \r\n      if ((prop.MaxLength !== null && (dto === null ||  dto === undefined || dto.length > prop.MaxLength!)) || \r\n        (prop.MinLength !== null && (dto === null ||  dto === undefined || dto.length < prop.MinLength!))) {\r\n        return `Text should contain between ${prop.MinLength} and ${prop.MaxLength} characters`\r\n      }\r\n    }\r\n    return ''\r\n  }\r\n  state(prop: Prop, dto: any): boolean {\r\n    if (prop.Required === false && (dto === null || dto === undefined || dto.length===0))\r\n      return true\r\n    if (prop.Required === true && prop.Type === 'enum' && prop.PropEnums.find( ({value}) => value === dto) === undefined)\r\n      return false\r\n    if (prop.Required === true && (dto === null || dto === undefined || dto.length===0))\r\n      return false;\r\n    if (prop.Type === 'number') {\r\n      if ((prop.Max !== null && (dto === null ||  dto === undefined || dto > prop.Max)) || \r\n        (prop.Min !== null && (dto === null ||  dto === undefined || dto < prop.Min))) {\r\n        return false\r\n      }\r\n      if(isNaN(dto)) {\r\n        return false\r\n      }\r\n    }\r\n    if (prop.Type === 'text') {\r\n      if ((prop.MaxLength !== null && (dto === null ||   dto === undefined || dto.length > prop.MaxLength!)) || \r\n        (prop.MinLength !== null && (dto === null ||   dto === undefined || dto.length < prop.MinLength!))) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n  isValidState(dto: any): boolean {\r\n    if (!this.schema)\r\n        return true;\r\n    return this.schema.Props.filter( ({ Hidden }) => { return !Hidden }).every(prop => this.state(prop, dto[prop.Name!])===true)\r\n  }\r\n  isNumeric(prop: Prop) {\r\n    return (prop.Type === 'number')\r\n  }\r\n  strToValue(prop: Prop, valuestr: string): any {\r\n    if (this.isNumeric(prop)) {\r\n      return Number(valuestr)\r\n    }\r\n    if (prop.Type === 'enum') {\r\n      return Number(valuestr)\r\n    }\r\n    return valuestr\r\n\r\n  }\r\n}","import React from 'react'\r\nimport styles from './LinkButton.module.css'; \r\ninterface LinkButtonProps {\r\n    text: string;\r\n    onClick: () => void;\r\n    children: React.ReactNode\r\n}\r\nexport type Ref = HTMLButtonElement\r\nconst LinkButton = React.forwardRef<Ref, LinkButtonProps>((props,ref) =>  (\r\n\r\n<button ref={ref} className={styles.linkbutton} onClick={props.onClick}>\r\n    {props.text}\r\n    {props.children}\r\n</button>\r\n\r\n))\r\nexport default LinkButton","import React, {useState} from 'react'\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nexport const messageBox = async (title: string, message: string, OKButtonTitle: string = \"OK\") => {\r\nreturn new Promise<void>((resolve, reject) => {\r\n  try {\r\n    let show=true\r\n    const handleOK = () => {\r\n      show=false\r\n      removeModal()\r\n      resolve();\r\n    }\r\n    const handleCancel = () => {\r\n      show=false\r\n      removeModal()\r\n      reject(new Error(\"Modal cancelled\"))\r\n    }\r\n    const removeModal = () => {\r\n      const div = document.getElementById(\"getValue-container\");\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      if (body && div)\r\n        body.removeChild(div);\r\n    }\r\n\r\n    const body = document.getElementsByTagName(\"body\")[0];\r\n    const div = document.createElement(\"div\");\r\n    div.setAttribute(\"id\", \"getValue-container\");\r\n    body.appendChild(div);\r\n    ReactDOM.render(\r\n      <MyModal onOK={handleOK} onCancel={handleCancel} show={show} title={title} message={message} OKButtonTitle={OKButtonTitle} />,\r\n      div\r\n    );\r\n  }\r\n  catch(e) {\r\n    reject(new Error(e.message))\r\n  }\r\n});\r\n}\r\n\r\n\r\ninterface MyModalProps {\r\n    onOK: () => void;\r\n    onCancel: () => void;\r\n    show: boolean;\r\n    title: string;\r\n    message: string;\r\n    OKButtonTitle: string;\r\n}\r\nconst MyModal: React.FC<MyModalProps> = (props) => {\r\n    const [show, setShow] = useState(props.show);\r\n    const [forceHide, setForceHide] = useState(false)\r\n    if (props.show !== show && forceHide===false) {\r\n        setShow(props.show)\r\n        setForceHide(true)\r\n    }\r\n    const onCancel = () => {\r\n        setForceHide(true)\r\n        setShow(false)\r\n        props.onCancel()\r\n    }\r\n    const onOK = () => {\r\n        setForceHide(true)\r\n        setShow(false)\r\n        props.onOK()\r\n    }\r\n    return (\r\n        <Modal show={show}>\r\n        <Modal.Header>\r\n          <Modal.Title>{props.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{props.message}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={onCancel}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={onOK}>\r\n            {props.OKButtonTitle}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n}\r\nexport default MyModal","import { MsalAuthProvider, LoginType } from 'react-aad-msal';\r\n \r\n// Msal Configurations\r\nconst config = {\r\n  auth: {\r\n    authority: process.env.REACT_APP_AUTHORITY,\r\n    clientId: process.env.REACT_APP_CLIENTID,\r\n    redirectUri: process.env.REACT_APP_POSTLOGOUTREDIRECT,\r\n    validateAuthority: false\r\n  },\r\n  cache: {\r\n    cacheLocation: \"localStorage\",\r\n    storeAuthStateInCookie: true\r\n  }\r\n};\r\n \r\n// Authentication Parameters\r\nconst authenticationParameters = {\r\n  scopes: [\r\n    process.env.REACT_APP_B2CSCOPES\r\n  ]\r\n}\r\n \r\n// Options\r\nconst options = {\r\n  loginType: LoginType.Popup,\r\n  tokenRefreshUri: window.location.origin\r\n}\r\n \r\nexport const authProvider = new MsalAuthProvider(config, authenticationParameters, options)\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Link, useParams, useLocation } from 'react-router-dom'\r\nimport { removeDTO, getSingleName, useGetList } from './lib/CRUDService'\r\nimport { SchemaTool, Schema } from './lib/SchemaTool'\r\nimport LinkButton, {Ref} from './LinkButton'\r\nimport { messageBox } from './MyModal'\r\nimport cogoToast from 'cogo-toast';\r\nimport { authProvider } from './lib/authProvider';\r\nimport {  AuthenticationState } from \"react-aad-msal\";\r\n\r\ninterface CRUDRowProps {\r\n    data: any,\r\n    onRefresh: () => void\r\n}\r\n\r\nconst CRUDRow: React.FC<CRUDRowProps> = (props) => {\r\n  const ref = React.createRef<Ref>()\r\n  const location = useLocation()\r\n  const {entity} = useParams()\r\n  \r\n  const renderTooltip = (text: string) => {\r\n    return (<Tooltip id={text}>{text}</Tooltip>)\r\n  }\r\n\r\n  const handleDeleteLinkClick = async () => {\r\n\r\n    try  {\r\n      const isAuthenticated =  authProvider.authenticationState === AuthenticationState.Authenticated;\r\n      if (!isAuthenticated) {\r\n        await messageBox(\"Sign in\", \"You need to be signed in to perform this operation. Sign in now?\", \"Sign in\")\r\n        await authProvider.login()\r\n      }\r\n      const title=`Delete ${getSingleName(entity!)}`\r\n      const message=`Delete ${getSingleName(entity!)} ${props.data.Name}?`\r\n      const OKButtonTitle=\"Delete\"\r\n      await messageBox(title,message,OKButtonTitle)\r\n      await DeleteAsync()\r\n    }\r\n    catch(e) {\r\n      console.log(\"delete cancelled\",e.message)\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  const DeleteAsync = async () => {\r\n    try {\r\n      const token = await authProvider.getAccessToken()\r\n      console.log('token',token)\r\n      await removeDTO(entity!, props.data.Id, token.accessToken)\r\n      props.onRefresh()\r\n      const { hide } = cogoToast.info(\r\n        <div>\r\n          <b>Delete successful</b>\r\n          <div>\r\n            {`Deleted info for ${getSingleName(entity!)} ${props.data.Name}`}\r\n          </div>\r\n        </div>,\r\n        {hideAfter: 5, onClick: () =>  hide!()} )\r\n    }\r\n    catch(e) {\r\n      const { hide } = cogoToast.error(\r\n      <div>\r\n        <b>Delete failed</b>\r\n        <div>\r\n          {`Failed to delete info for ${getSingleName(entity!)} ${props.data.Name}.`} \r\n          <br/>\r\n          {e.message}\r\n        </div>\r\n      </div>,\r\n      {hideAfter: 500, onClick: () =>  hide!()} )\r\n      }\r\n  }\r\n\r\n  const dataCols =\r\n      Object.keys(props.data).map( (key, index) => {\r\n        let val = props.data[key]\r\n        if (val && (typeof val === 'object' || Array.isArray(val))) {\r\n            return null\r\n        }\r\n        if (typeof val === 'string' && val.length > 30) {\r\n          val = `${val.slice(0,30)}...`\r\n        }\r\n        return <td key={index}>{val}</td> \r\n        }\r\n      )\r\n\r\n  \r\n  return (\r\n        <tr>\r\n          <td style= {{width: '80px', whiteSpace: 'nowrap'}}>\r\n            \r\n            <OverlayTrigger\r\n            key={1}\r\n            placement=\"top\"\r\n            delay={{ show: 250, hide: 400 }}\r\n            overlay={renderTooltip(`Edit ${props.data.Name}`)}\r\n            >\r\n            <Link to = {`${location.pathname}/${props.data.Id}`}>\r\n            <i><FontAwesomeIcon icon=\"edit\" /></i>\r\n            </Link>\r\n            </OverlayTrigger>\r\n            \r\n            &nbsp;&nbsp;\r\n            <LinkButton ref={ref} text=\"\" onClick={handleDeleteLinkClick}>\r\n              <OverlayTrigger\r\n                key={3}\r\n                placement=\"right\"\r\n                delay={{ show: 250, hide: 400 }}\r\n                overlay={renderTooltip(`Delete ${props.data.Name}`)}\r\n              >\r\n                <i><FontAwesomeIcon icon=\"trash\" /></i>\r\n              </OverlayTrigger>\r\n            </LinkButton>\r\n          </td>\r\n        {dataCols}\r\n        </tr>\r\n    )\r\n}\r\n\r\ninterface CRUDHeaderProps {\r\n    schema: Schema;\r\n}\r\nconst CRUDHeader: React.FC<CRUDHeaderProps> = (props) => {\r\n    if (!props.schema)\r\n      return null\r\n    \r\n    const schemaTool = new SchemaTool(props.schema)\r\n    return (\r\n      <thead>\r\n      <tr>\r\n        <th></th>\r\n        \r\n      {props.schema.Props.map( (key, index) => {\r\n        return <th key={index}>{schemaTool.label(key)}</th> \r\n        }\r\n        )}\r\n      </tr>\r\n      </thead>\r\n    )\r\n}\r\n\r\n\r\nconst CRUDTable: React.FC = () => {\r\n  const { entity } = useParams()  \r\n  const [ {data, schema, isLoading, isError, errorText}, refresh, setRefresh ] = useGetList( entity! )\r\n  const location = useLocation()\r\n  console.log('dd',schema)\r\n  \r\n  const renderTooltip = (text: string) => {\r\n    return (<Tooltip id={text}>{text}</Tooltip>)\r\n  }\r\n  \r\n  const onRefresh = () => {\r\n    setRefresh(refresh ? false : true)\r\n  }\r\n  const renderError = () =>\r\n  {\r\n    return (\r\n      <Alert variant=\"danger\">\r\n        <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n        {errorText}\r\n      </Alert>\r\n    )\r\n  }\r\n  return (\r\n    <Container fluid>\r\n      <p />\r\n      <Row>\r\n      <Col>\r\n      <OverlayTrigger\r\n      key={2}\r\n      placement=\"right\"\r\n      delay={{ show: 250, hide: 400 }}\r\n      overlay={renderTooltip(`Add new ${getSingleName(entity!)}`)}\r\n      >\r\n      <Link to = {`${location.pathname}/New`}>\r\n        <i><FontAwesomeIcon icon=\"plus\" /> </i>Add\r\n      </Link>\r\n      </OverlayTrigger>\r\n      </Col>\r\n       <Col><h2>{entity}</h2></Col>\r\n       <Col></Col>\r\n      </Row>\r\n      { isError && renderError() }\r\n      { isLoading ? (<><Spinner animation=\"border\" variant=\"info\" size=\"sm\"/> <span>Loading</span></>) \r\n      : \r\n      (\r\n        <Table>\r\n        <CRUDHeader schema={schema!}></CRUDHeader>\r\n        <tbody>\r\n        {data.map((obj, index) => \r\n        <CRUDRow key= {index} data={obj} onRefresh={onRefresh} />\r\n        )}\r\n        </tbody>\r\n        </Table>) \r\n       }\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default CRUDTable","import React, {useState} from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport {useGet, putDTO, postDTO, getSingleName} from './lib/CRUDService'\r\nimport { SchemaTool, Prop } from './lib/SchemaTool'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nimport cogoToast from 'cogo-toast';\r\n\r\n\r\ninterface EditDTOParams {\r\n    entity: string,\r\n    id: string\r\n}\r\n\r\n\r\nconst EditDTO: React.FC = () => {\r\n    const [validated, setValidated] = useState(false)\r\n    const params = useParams<EditDTOParams>();\r\n    const Id = params.id===\"New\" ? -1 : parseInt(params.id)\r\n    const history = useHistory(); \r\n    let [{data, schema, isChanged, isLoading, isError, errorText}, updateData] = useGet( params.entity, Id )\r\n    const schemaTool = schema === null ? null : new SchemaTool(schema!)\r\n    \r\n    const handleChange = (id: string, e: React.FormEvent<HTMLInputElement>): void => {\r\n        const prop: Prop | undefined = schemaTool?.schema?.Props.find(x => x.Name === id)\r\n        if (!prop || !data) {\r\n            return\r\n        }\r\n        const newValue = e.currentTarget.type === 'checkbox' ? e.currentTarget.checked : schemaTool?.strToValue(prop, e.currentTarget.value);\r\n        data[id] = newValue\r\n        updateData(data)\r\n    }\r\n    const handleUpdateOrAdd = (e: React.FormEvent<HTMLFormElement>) => {\r\n        \r\n        const form = e.currentTarget!;\r\n        \r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setValidated(true);\r\n        if (form.checkValidity()===true) {\r\n            if (Id === -1) {\r\n                handleAdd()\r\n            }\r\n            else {\r\n                handleUpdate()\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (!data) {\r\n            history.goBack()\r\n            return\r\n        }\r\n        if (isChanged === false) {\r\n            const { hide } = cogoToast.info(\r\n                <div>\r\n                <b>No changes where made.</b>\r\n                <div>\r\n                    {`No changes where made for ${getSingleName(params.entity)} ${data.Name}`}\r\n                </div>\r\n                </div>,\r\n                {hideAfter: 5, onClick: () =>  hide!()} )\r\n            history.goBack()\r\n            return\r\n        }\r\n        console.log('updating', data.Name)\r\n        putDTO(params.entity, data)\r\n        .then(() => {\r\n            console.log(\"OK\")\r\n            const { hide } = cogoToast.info(\r\n            <div>\r\n            <b>Update successful</b>\r\n            <div>\r\n                {`Updated info for ${getSingleName(params.entity)} ${data.Name}`}\r\n            </div>\r\n            </div>,\r\n            {hideAfter: 5, onClick: () =>  hide!()} )\r\n        })\r\n        .catch((error: Error) => {\r\n            console.log(error)\r\n            const { hide } = cogoToast.error(\r\n            <div>\r\n            <b>Update failed</b>\r\n            <div>\r\n                {`Failed to update info for ${getSingleName(params.entity!)} ${data.Name}.`} \r\n                <br/>\r\n                {error.message}\r\n            </div>\r\n            </div>,\r\n            {hideAfter: 5, onClick: () =>  hide!()} )\r\n        })\r\n        .finally(() => {\r\n            history.goBack()\r\n        })\r\n    }\r\n    const handleAdd = () => {\r\n        if (!data) {\r\n            history.goBack()\r\n            return\r\n        }\r\n        postDTO(params.entity, data)\r\n        .then(() => {\r\n            const { hide } = cogoToast.info(\r\n            <div>\r\n            <b>Add successful</b>\r\n            <div>\r\n                {`Added info for ${getSingleName(params.entity)} ${data.Name}`}\r\n            </div>\r\n            </div>,\r\n            {hideAfter: 5, onClick: () =>  hide!()} )\r\n        })\r\n        .catch((error) => {\r\n            const { hide } = cogoToast.error(\r\n            <div>\r\n            <b>Add failed</b>\r\n            <div>\r\n                {`Failed to add info for ${getSingleName(params.entity!)} ${data.Name}.`} \r\n                <br/>\r\n                {errorText}\r\n            </div>\r\n            </div>,\r\n            {hideAfter: 5, onClick: () =>  hide!()} )\r\n        })\r\n        .finally(() => {\r\n            history.goBack()\r\n        })\r\n    }\r\n    const renderControl = (prop: Prop) => {\r\n        let retval = null;\r\n        if (schemaTool===null) {\r\n            return null\r\n        }\r\n        switch (prop.Type) {\r\n            case 'enum':\r\n                retval = ( \r\n                    <Form.Row>\r\n                    <Form.Label column sm={2}>{schemaTool.label(prop)}</Form.Label>\r\n                    <Col>\r\n                    <Form.Control \r\n                    as=\"select\" \r\n                    required={prop.Required}\r\n                    readOnly={prop.Readonly}\r\n                    value={ data[prop!.Name!] || \"\"} \r\n                    onChange={(e: React.FormEvent<HTMLInputElement>) => handleChange(prop.Name, e )}\r\n                    >\r\n                     <option key=\"-1\" value=\"\" disabled></option>\r\n                    { prop.PropEnums.map((enumDesc, index) =>\r\n                    <option key={index} value={enumDesc.value}>{enumDesc.text}</option>)\r\n                    }\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {schemaTool.invalidFeedback(prop,data![prop!.Name])}\r\n                    </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Row>\r\n                )\r\n                break;\r\n        \r\n            case 'bool':\r\n                retval = ( \r\n                    <Form.Row>\r\n                        <Col sm={2}/>\r\n                    <Form.Check \r\n                    type=\"checkbox\"\r\n                    label={schemaTool.labelForCheckBox(prop)}\r\n                    checked={data[prop!.Name!]}\r\n                    onChange={(e: React.FormEvent<HTMLInputElement>) => handleChange(prop.Name, e )}\r\n                    />\r\n                    </Form.Row>\r\n                )\r\n                break;\r\n            default:\r\n                retval = (\r\n                    <Form.Row>\r\n                    <Form.Label column sm={2}>{schemaTool.label(prop)}</Form.Label>\r\n                    <Col>\r\n                    <Form.Control \r\n                    type={prop.InputType} \r\n                    required={prop.Required}\r\n                    readOnly={prop.Readonly}\r\n                    pattern={prop.Pattern || undefined}\r\n                    maxLength={prop.MaxLength || undefined}\r\n                    minLength={prop.MinLength || undefined}\r\n                    max={prop.Max || undefined}\r\n                    min={prop.Min || undefined}\r\n                    value={ data![prop!.Name!] || \"\"}  \r\n                    onChange={(e: React.FormEvent<HTMLInputElement>) => handleChange(prop.Name, e )}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {schemaTool.invalidFeedback(prop,data![prop!.Name])}\r\n                    </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Row>\r\n                )\r\n                break;\r\n        }\r\n        return retval\r\n    }\r\n    const renderTitle = () => {\r\n        if (Id === -1) {\r\n            return ( <> <p/><h4>{`Add new ${getSingleName(params.entity)}`}</h4></>)\r\n        }\r\n        else {\r\n            return (<> <p/><h4>{`Edit ${getSingleName(params.entity)} details`}</h4></>)\r\n        }\r\n    }\r\n    const renderError = () =>\r\n    {\r\n        return (\r\n        <Alert variant=\"danger\">\r\n            <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n            {errorText}\r\n        </Alert>\r\n        )\r\n    }\r\n    \r\n    const renderForm = () => {\r\n        if (schemaTool===null) {\r\n            return null\r\n        }\r\n        const x = schemaTool.editFields().map((prop, index) => {\r\n            return (\r\n            <Form.Group key={index}>\r\n                {renderControl(prop)}\r\n            </Form.Group>\r\n            )\r\n        })\r\n        return (\r\n            <Container>\r\n            <Form noValidate validated={validated} onSubmit={handleUpdateOrAdd}> \r\n                {x}\r\n                <Form.Row>\r\n                    <Col sm={8}></Col>\r\n                    <Col sm={2}>\r\n                    <Button block variant=\"primary\" type=\"submit\">\r\n                        OK\r\n                    </Button>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                    <Button block variant=\"light\" onClick={() => history.goBack()}>\r\n                        Cancel\r\n                    </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n            </Container>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n        {renderTitle()}\r\n        { isError && renderError() }\r\n        { isLoading ? (<><Spinner animation=\"border\" variant=\"info\" size=\"sm\"/> <span>Loading</span></>)  \r\n        : (renderForm())  }\r\n        </>\r\n    )\r\n}\r\nexport default EditDTO","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom'\r\nimport CRUDTable from './CRUDTable'\r\nimport EditDTO from './EditDTO'\r\nimport {apiMethods} from './lib/CRUDService'\r\n\r\nconst usePersistedState = (key: string, defaultValue: any) => {\r\n  const [state, setState] = useState(\r\n    () => {\r\n      const val = localStorage.getItem(key);\r\n      if (val) {\r\n        return JSON.parse(val)\r\n      }\r\n      return defaultValue\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n  return [state, setState];\r\n}\r\n\r\nconst NavDatabase: React.FC = () => {\r\n    const [key, setKey] = usePersistedState(\"SelectedEntity\", \"Movies\")\r\n\r\n    const linkItems = apiMethods.map((entity,index) => \r\n          <LinkContainer key={index} to={`/Database/${entity.Name}`} exact>\r\n          <Nav.Link eventKey={entity.Name}>{entity.Name}</Nav.Link>\r\n          </LinkContainer>\r\n    )\r\n\r\n    return (\r\n        <>\r\n        <hr/>\r\n        <Nav variant=\"tabs\" \r\n        activeKey={key}\r\n        onSelect={(selectedKey: string) => setKey(selectedKey)}\r\n        >\r\n        {linkItems}\r\n        </Nav>\r\n    <Switch>\r\n    <Route exact path='/Database'>\r\n        <Redirect to= {`/Database/${key}`} />\r\n    </Route>/>\r\n    <Route exact path=\"/Database/:entity\">\r\n        <CRUDTable />\r\n    </Route>\r\n    <Route exact path=\"/Database/:entity/:id\">\r\n        <EditDTO />\r\n    </Route>\r\n    <Route path=\"*\">\r\n        <NoMatch />\r\n    </Route> \r\n    </Switch>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default NavDatabase\r\n\r\n\r\nconst NoMatch = () => {\r\n    let location = useLocation();\r\n  \r\n    return (\r\n      <div>\r\n        <h3>\r\n          No match for <code>{location.pathname}</code>\r\n        </h3>\r\n      </div>\r\n    );\r\n  }","import * as React from \"react\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport {\r\n  AzureAD,\r\n  AuthenticationState,\r\n  IAzureADFunctionProps\r\n} from \"react-aad-msal\";\r\n\r\n// Import the authentication provider which holds the default settings\r\nimport { authProvider } from \"./lib/authProvider\";\r\n\r\nexport const LoginButton = () => {\r\n    console.log(authProvider)\r\n  \r\n  return (\r\n    <AzureAD provider={authProvider}>\r\n      {({ login, logout, authenticationState }: IAzureADFunctionProps) => {\r\n        const isInProgress =\r\n          authenticationState === AuthenticationState.InProgress;\r\n        const isAuthenticated =\r\n          authenticationState === AuthenticationState.Authenticated;\r\n        const isUnauthenticated =\r\n          authenticationState === AuthenticationState.Unauthenticated;\r\n\r\n        if (isAuthenticated) {\r\n          return (\r\n            <React.Fragment>\r\n              <Button variant=\"outline-light\" onClick={logout}>\r\n                Sign out\r\n              </Button>\r\n            </React.Fragment>\r\n          );\r\n        } else if (isUnauthenticated || isInProgress) {\r\n          return (\r\n            <Button variant=\"outline-light\" onClick={login} disabled={isInProgress}>\r\n              Sign in\r\n            </Button>\r\n          );\r\n        }\r\n      }}\r\n    </AzureAD>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport {LinkContainer, IndexLinkContainer} from 'react-router-bootstrap'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Home from './Home'\r\nimport {About} from './About'\r\nimport NavDatabase from './NavDatabase'\r\nimport {LoginButton} from './LoginButton'\r\nconst NavMain = () => (\r\n    <>\r\n    <Navbar bg=\"primary\" variant=\"dark\" sticky=\"top\">\r\n    <Nav className=\"mr-auto\">\r\n        <IndexLinkContainer to=\"/\">\r\n        <Nav.Link>Home</Nav.Link>\r\n        </IndexLinkContainer>\r\n        <LinkContainer to=\"/Database\">\r\n        <Nav.Link>Database</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/About\">\r\n        <Nav.Link>About</Nav.Link>\r\n        </LinkContainer>\r\n    </Nav>\r\n    <Form inline>\r\n      <LoginButton />\r\n    </Form>\r\n  </Navbar>\r\n  <Switch>\r\n  <Route exact path='/'>\r\n    <Home/>\r\n  </Route>\r\n  <Route path='/Database'>\r\n    <NavDatabase/>\r\n  </Route>\r\n  <Route path='/About'>\r\n    <About/>\r\n  </Route>\r\n  </Switch>\r\n  </>\r\n)\r\n\r\nexport default NavMain","import React from 'react';\r\ninterface User {\r\n    name: string\r\n}\r\nexport const UserContext = React.createContext<User>({name: \"Antti\"})\r\n","import React from 'react';\nimport NavMain from './NavMain'\nimport Container from 'react-bootstrap/Container'\nimport {UserContext} from './UserContext'\nconst App = () => (\n  <Container fluid className=\"App-header\">\n    <UserContext.Provider value = {{ name: \"Antti\" }}>        \n      <NavMain />\n    </UserContext.Provider>\n  </Container>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faTrash, faPlus, faEdit } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, faTrash, faPlus, faEdit)\n\nReactDOM.render((\n  <Router>\n    <App />\n  </Router>\n), document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/azure.4ddcbcf7.png\";","module.exports = __webpack_public_path__ + \"static/media/react.958b079e.png\";","module.exports = __webpack_public_path__ + \"static/media/netcore.3b3f6c90.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkbutton\":\"LinkButton_linkbutton__-EKqo\"};"],"sourceRoot":""}